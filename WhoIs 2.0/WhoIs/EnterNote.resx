<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AADCxML/w8PD/8TCwv/CxMT/ur/A/1lgYv8zOj3/PkNG/ywxNP8sLzP/Ki8x/11hYv9GSkr/FBcX/xkb
        G/8aGhv/Jygp/zEyNf83OT3/Njk+/zo9Qv9HS0//QURI/0dKTv86PUH/NTg9/1hbYf/BwcL/xcTC/8PD
        wv/Cw8P/w8PD/8LDw//Dw8P/xcTE/77AwP/M0dH/xtLW/1FcYf8xOT7/Mzk//yElK/8lKSz/OT9D/zs/
        Rf8tLy//Ki0r/yQlJv8gIST/HyIl/ywvM/85PED/NTc8/0FCRv9FR0v/QENI/0RHTP8uMjf/UFNY/8LD
        w//Fw8L/w8PD/8LDw//Dw8P/wsPD/8PDw//Ew8P/wMLC/8XLyv/f7PH/z93k/6Gts/+Bi5L/b3h//zhC
        R/8uMjP/Iys2/ztNZv8jMkT/Iygu/yUoK/8eIiL/Gx0g/ywrMv85OT//OTo+/0VHS/9DRkv/PkJH/zo+
        Q/9bX2L/wcLD/8XDw//Dw8P/wsPE/8PDw//Cw8P/w8PD/8XDw/+/wsH/x83M/9vm6//a5+7/4O70/93t
        8v/a7PL/sMPK/z5DPv8UIjT/PGWf/zlYif8lLT3/KSwx/yosLf8nJyf/IB4j/ysqMP82Nzv/OjxB/0FE
        Sf8+QUb/PkJI/1teYv/BwsL/xcPC/8PDw//Cw8T/w8PD/8LDw//Dw8P/xcPD/7/Bwf/Hzcz/3unt/9nm
        7P/V5Or/0ePo/83h5v/e8vj/Z3Fw/xcqQ/9Aaaj/NlWL/zpFX/8ZHi3/ISQp/ykpKf8oJyr/IyQo/yco
        LP80Nzv/PD9E/0VITf8/Q0j/Wl1h/8HCwv/FxMP/wsPD/8LDxP/Dw8P/wsPD/8PDw//Fw8P/v8HB/8fN
        zP/d6e7/2uft/9nn7P/Y5ev/1eLp/9zr7/+mtsL/SmCA/0Zfiv8cL1X/Kjdb/ycwTP8aHif/ISIi/yYp
        Kf8lKCv/JSYq/yYpLf9DRkv/R0tQ/z1BRv9YXF//wcLC/8XEw//Cw8P/wsPE/8PDw//Cw8P/w8PD/8XD
        xP+/wcH/x83M/97q7v/b6O//2+bu/9rn7f/Y5uj/2Ofn/9Pn9v9uhKX/M0Rm/yQvSf8fKET/KDFQ/y03
        Uv8dJTX/HiEj/ygrKP8rLi//KS0x/zY6QP9ER0//QEJK/1hbYP/AwcL/xcTD/8PDwv/Cw8P/w8PD/8LD
        w//Dw8P/xcTE/7/Cwf/Izs3/3+vu/93o7v/d6O//2unt/9np6v/e8PP/nbDC/zVJa/8mNlj/KDBI/ycr
        Ov8hJzz/Iy1L/yw3U/8iLD//HiUu/yktMf8uMDT/MTI1/zY4Pv85PET/WVxh/8DBwv/GxMP/xMPC/8PD
        w//Dw8P/wsPD/8PDw//Fw8T/v8HB/8fNzf/e7O7/3urs/97p6//d6/H/zuLt/4ujvv9IYYn/LEJx/yY2
        Yv8kLk//ICtG/x0oQP8cIzn/HCVA/ys5XP8tO1r/JCw//ywuN/83Njf/Njg4/y4zOf9XXWL/wcPE/8XD
        wv/Ew8L/w8PD/8PDw//Cw8P/w8PD/8TDw/+/wcH/x87N/97s8P/f6uv/4Ovs/9Tn9/98mbn/VXuy/2mO
        z/9ohsf/Ynu3/150qP9LZ5z/NVB//ys9YP8lMVL/HilQ/y0+av89T3j/NUNg/yo1Rf8rMjj/XmVq/77G
        y/+/w8T/w8PC/8XDw//Ew8P/w8PD/8LDw//Dw8P/xMPD/7/Bwf/Izs3/4Ozy/9/p7P/l8PT/pr7a/052
        sv9pld7/eqDp/4mn7f+Sr/H/jq3q/4Ci4f9qisf/TGug/0RfkP86UIP/Jj91/y5NiP9PcKj/P1qD/yUx
        RP+psbj/4ezw/7zCwv/DxML/xsPD/8XDw//Dw8P/wsPD/8PDw//Ew8P/v8HB/8jOzf/g7fL/4ezr/9np
        9f97msf/XIXH/3Kd4v9yl93/dJLX/4Ge4P+Orev/kbDt/3qZ1/9afLz/U3W4/0xusv8+X6H/MViV/0Bv
        sv9Wfr3/ZXmY/9ji5//U3uL/v8TE/8TDwv/Ew8P/wsPD/8PDw//Cw8P/w8PD/8TDw/+/wcH/x87N/+Dt
        8f/k8ez/w9nt/2iLx/9vk9H/Vn2//05yu/9de8L/Z4HF/3GIy/9si8f/b5DL/3WU1P9hgsf/UXa9/0ty
        u/9Db7L/Qne8/018y/+MqNL/2ujs/9bf4v/Bw8T/xcPC/8LDw//Aw8T/w8PD/8LDw//Dw8P/xMPD/7/B
        wf/Izc3/4Ovy/+by8/+wxeD/UHK2/0hpsf9Sc7v/T2+3/1FprP9cba7/Wmin/0hin/9jgsH/cZDQ/1p8
        wP9UecH/U3rJ/098yP9Lgcv/TXzL/2aErv/P4OX/2OHk/8HDw//Fw8L/w8PD/8DDxP/Dw8P/wsPD/8PD
        w//Fw8P/v8HB/8jOzv/h6/P/4+/1/6e94P9ggs3/Q2Kx/1Jyt/8+XZ7/Ijl1/zRFf/9vfrj/ZnvC/1Jr
        uP9LZq//Q2Kv/1F0x/9Xfc//XofP/1eFyv9PdsH/KkFo/7zJzf/c5ej/wMLC/8XDwv/Dw8P/wMPE/8PD
        w//Cw8P/w8PD/8TDw/+/wcH/yM7O/+Lt8v/k8PT/qMDl/36h8v9sh9v/VnG9/1VwuP9MY6f/bYDF/1lq
        tv9cccH/c4rX/3KN1f9oiNL/ZYvb/1qC1f9didD/XY3R/2aM2f8oPGr/qbS8/9/p6/+/wcL/xcPC/8PD
        w//Aw8T/w8PD/8LDw//Dw8P/xcPD/7/Bwf/Izs3/5e/y/9zr9P+at+D/fqTx/4Gg8f99l+j/lK7+/5Co
        9v+Al+f/e5Dl/42l8/+atPr/lbP1/46x9f92nej/WYfX/1mK1v9cidT/YYXW/1JqpP+aqb7/4enr/8DB
        wf/Dw8P/wsPE/8LDw//Dw8P/wsPD/8PDw//Fw8P/vsHB/8jOzf/o8fP/y97u/3qcx/9bhMb/aIfL/3uZ
        3/+Kp/L/j6n1/4Od5/+Rq/D/janr/4ej5P+VsvP/kbH4/3id6v9fjt7/XYrU/0xrsP8uSY//UGit/6i6
        4//c5Of/w8O//8HDw//BwsX/xcPD/8PDw//Cw8P/w8PD/8XDw/+/wcH/x83N/+Xy9f/I3Or/b460/0Bi
        mv8/VYr/PFaS/4Cc4P+WsPL/cYnJ/26Hwv9iebD/VGqg/2R/uv98nN//fKHr/2iT5v9Odbv/M016/yxF
        d/9FYKz/g5nQ/9nk5//Dw8L/w8LD/8HDxf/Ew8P/w8PD/8LDw//Dw8P/xcPD/7/Bwf/Hzcz/5fX4/6/F
        1f9oh7D/UnKo/0hdi/8rRHv/dJHR/4uj4f9BWJL/PlSJ/0NYh/82Tn7/PFiS/01wsf9sktn/bpXj/0do
        ov84UGr/QFp7/zZTmf9wisL/2ufs/8PCwv/EwsT/wcPF/8PDw//Dw8P/wsPD/8PDw//Ew8P/v8HB/8fN
        zP/l9fn/jqW5/3WWyP90mtv/UWym/1l1sv94ldf/b4jI/0Ralf83S4D/VG2c/159r/9SdrL/VXzB/2GJ
        0v9tkdb/N1OC/0Nedv9ObIj/O1mK/2N9pf++z9f/xsbG/8TBxP/Bw8X/wsPC/8PDw//Cw8P/w8PD/8XD
        w/++wMD/ydDP/9zs7/97kqn/fZ/W/32m7/+Aouj/iqnp/4yp6v+JouL/eZDM/2uAu/9zj8f/dpvV/3eg
        4v9wmd//aZDY/1Fyrf8yS3H/TWmD/0prh/9JaIj/U22G/6u8x//Hxsj/xcHC/8LDxP/Bw8P/w8PD/8LD
        w//Dw8P/xcTE/7/Bwf/L0M//2+nu/2Z9lP91lsX/iq7v/5K0+/+evPj/o7z4/6S69f+ku/L/nLLy/5Cs
        8P+EqOz/fqTs/3+l6f9ig8H/SGOR/2yCnf9ddo3/XH2Y/05wjf9aeI3/u8vX/8bGyP/Fw77/wsTC/8LC
        xf/Dw8P/wsPD/8PDw//FxMT/v8HB/8nPzv/l8vT/iJ2u/2F/pP9Xd6z/e5nS/4qm4v+fuPj/rMD8/63B
        9v+nuvL/kazv/4eq8P+KrO//j7Ds/3aRxv9zi7H/j6W7/3GKn/96nbn/XYOi/4SjuP/S4en/xMPF/8XE
        wP/BxML/w8LE/8PDw//Cw8P/w8PD/8XDw/+/wcH/yM7N/+32+f+rvsr/Z4Kc/0Jfhf8sR3D/R2ac/2aB
        xP+Ppeb/p731/6e89v+Oquv/fJzc/3iW0f9viLr/bYKr/3uQrv9+k6X/hZ2w/3+hvP9zmbb/qMbX/9jl
        6v/DwsT/w8TB/8HEw//DwsT/w8PD/8LDw//Dw8P/xMPD/7/Bwf/Izs3/6vP5/8bX4/9ui57/d5Wv/zZP
        bf89WHz/T2aX/1Fjm/9tgbb/hZrS/3mTz/9ge7L/ZX6s/2d+ov97kK7/eI2m/3CBlP+Mn7T/f5u2/4ur
        xf/A2uX/2uTn/8PCxP/CxML/wcTD/8XDw//Dw8P/wsPD/8PDw//Ew8P/v8HB/8nPzv/l7/b/3vD8/565
        yP+Jprn/gZqx/0RZav9SYHr/TVd8/0RQdv9LWob/UmeX/1VtmP9fdJj/WG2J/2uAl/9xhpz/c4SZ/4SU
        qv+Mobv/nLTJ/9Ll7v/b4+X/xMPE/8LDwv/Cw8P/xcPD/8PDw//Cw8P/w8PD/8TDw/+/wcH/yc/O/+bw
        8//j7/b/3Ov2/6a5yf+Tqbz/Z36Q/1RkeP9lbob/WGJ6/z9QaP9DVnH/Rll1/1Vngf9TZXz/VWZ7/2F0
        if9zhpz/m6y//6e3xv/I2OX/3uz1/9vi5//DxMX/xsPC/8TDw//Cw8P/w8PD/8LDw//Dw8P/xMPD/7/B
        wf/Jz87/6PDz/+Tt8//k8Pn/0+Lu/5iqt/96kKT/XnCH/1dkfP9SYHr/TWF6/zpPZ/9LX3X/VGd8/1ls
        f/9sf5D/dYaX/5Khsf+kssH/y9jj/9/s9P/h7PP/3eTp/8PExf/Gw8L/xMPD/8LDw//Dw8P/wsPD/8PD
        w//Ew8P/v8HB/8rPzv/p8fP/5u/y/+Tu9P/k8Pf/09/n/6KzxP9/kab/a3uQ/3WGnP9ccYj/P1Nm/1hr
        e/9leIf/g5Wi/7DCzf+zwsz/wczV/9Xh6f/i7fP/4ezw/+Pu8v/d5On/wsPE/8bDwv/Ew8P/wsPD/8PD
        w//Cw8P/w8PD/8TDw/+/wcH/yc/O/+bw9P/k7/T/5O71/+Tu9P/m8ff/3+v2/87b6P++y9n/uMjW/5ut
        u/+Soq//qrnE/87c5v/e7PP/2+nv/93p7//j7fT/4+7z/+Lt8f/h7fD/4+7z/93k6v/Dw8T/x8PC/8TD
        w//Cw8P/w8PD/8LDw//Dw8P/xMPD/7/Bwf/Jz87/5O/2/+Hu9v/j7vX/5O71/+Pu8v/o7/T/6fH3/+fy
        +P/k8fj/4e31/+Tv+P/l8fn/5fD3/+Pu8v/l7/H/4+3y/+Hs8v/h7fD/4e3x/+Ht8f/i7vP/3uTq/8PD
        xP/Hw8L/xMPD/8LDw//Dw8P/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>